// function
// (+) hoisting(호이스팅): 호출문이 먼저 나와도 정의문을 끌어올려 함수 호출.

// return
// 결과값 반환할 때 사용. break 처럼 강제 종료. 함수를 호출했을 때 결괏값(data) 반환.
// function 함수병() {
//  자바스크립트 코드1; => 2번
//  return 데이터(값); => 3번
//
//  자바스크립트 코드2;
// }
//
// let 변수 = 함수명(); => 1번

// 재귀 함수 호출
// function myFnc() {
//  자바스크립트 코드;
//  myFnc();
// }
// myFnc();

// Scope(스코프) 밖에서는 안이 보이지 않고 안에서만 밖을 볼 수 있다.

// Object Constructor Function (객체 생성자 함수).
// 객체 생성.
// function 함수명 (매개변수1, 매개변수2, ....n) {
//  this.속성명 = 새 값.
//  this.함수명 = function(){
//    자바스클비트 코드;
// }
//
// let 참조 변수(인스턴스 네임) = new 함수명();
// let 참조 변수 = {속성: 새 값, 함수명: function(){...}}
//
// => 프로토타입을 사용하여 메모리 낭비 줄이기.
// function 함수명(매개변수1, 매개변수2, ....n) {
//  this.속성명 = 새 값;
// }
//
// 함수명.prototype.함수명 = function() {
//  자바스크립트 코드;
// }
//
// let 참조 변수(인스턴스 네임) = new 함수명();

// 내장 함수.
// encodeURI(): 문자를 유니 코드값으로 인코딩.
//  *영문, 숫자, 일부 기호(; , / ? : @ & = + $) wpdhl.
// encodeURIComponent(): 문자를 유니 코드값으로 인코딩.
//  * 영문, 숫자 제외.
// decodeURI(): 유니 코드값을 디코딩해 다시 문자화.
// decodeURIComponent(): 유니 코드값을 디코딩해 다시 문자화.
// parselnt(): 문자열 데이터를 정수형 데이터로 반환.
// parseFloat(): 문자열 데이터를 실수형 데이터로 반환.
// String(): 문자형 데이터로 반환.
// Number(): 숫자형 데이터로 반환.
// Boolean(): 논리형 데이터로 반환.
// isNaN(): is Not a Number의 약자. 숫자가 아닌 문자가 포함되어 있으면 true를 반환.
// eval(): 문자형 데이터를 따옴표가 없는 자바스크립트 코드를 처리.
